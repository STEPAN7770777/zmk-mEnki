/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <dt-bindings/zmk/ext_power.h>
 
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };
&mt { quick_tap_ms = <0>; };

/ {
    behaviors {
        mt_spc: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced"; // Change is here
            tapping-term-ms = <200>;
            quick_tap_ms = <-200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };
        mt_bckspc: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced"; // Change is here
            tapping-term-ms = <200>;
            quick_tap_ms = <220>; // Change is here
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };
    };
};

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>    
                , <&macro_tap     &kp KP_N4 &kp KP_N6>    
                , <&macro_release &kp LALT>
                ;
        };
        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>    
                , <&macro_tap     &kp KP_N6 &kp KP_N2>    
                , <&macro_release &kp LALT>
                ;
        };
    };
};
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------
//| LGUI/] |  Q  |  W  |  E  |  R  |  T  |    |  Y  |  U  |  I  |  O  |  P  | RGUI/[ | 
//| CTRL/` |  A  |  S  |  D  |  F  |  G  |    |  H  |  J  |  K  |  L  |  ;  | CTRL/' |
//| LALT/\ |  Z  |  X  |  C  |  V  |  B  |    |  N  |  M  |  ,  |  .  |  /  | RALT/- |
//                     | RSE | SPC | LWR |    | LWR | BKS | RSE |
                        bindings = <
  &mt LWIN  RBKT  &kp Q &kp W &kp E &kp R &kp T              &kp Y  &kp U  &kp I     &kp O   &kp P    &mt RWIN  LBKT 
  &mt LCTRL GRAVE &kp A &kp S &kp D &kp F &kp G              &kp H  &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
  &mt LALT  BSLH  &kp Z &kp X &kp C &kp V &kp B              &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &mt RALT  MINUS
    &lt RSE TAB &mt_spc LSHFT SPACE &lt LWR RET  &kp C_MUTE  &lt LWR ESC &mt_bckspc RSHFT BSPC &lt RSE DEL
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
                lower_layer {
// ----------------------------------------------------------------------------------------
//| LGUI/CAPS |  *  |  7  |  8  |  9  |  +  |    | SRST | MUTE | VOLD | VOLU | ____ | RGUI |
//| CTRL/MENU |  /  |  4  |  5  |  6  |  -  |    |  =   | LEFT | DOWN |  UP  | RGHT | CTRL |
//| LALT/=    |  0  |  1  |  4  |  3  |  .  |    |  ls  | HOME | PGDN | PGUP | END  | RALT |
//                        | ADJ | ___ | ___ |    | ____ | ____ | ADJ  |
                        bindings = <
 &mt LWIN  CAPS  &kp KP_MULTIPLY &kp N7 &kp N8  &kp N9  &kp PLUS               &kp LG(LS(S)) &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP  &kp N0    &kp RWIN  
 &mt LCTRL K_APP &kp KP_SLASH    &kp N4 &kp N5  &kp N6  &kp MINUS              &kp EQUAL     &kp LEFT   &kp DOWN     &kp UP        &kp RIGHT &kp RCTRL
 &mt LALT  EQUAL &kp N0          &kp N1 &kp N2  &kp N3  &kp KP_DOT             &kp LG(SPACE) &kp HOME   &kp PG_DN    &kp PG_UP     &kp END   &kp RALT
                                   &lt ADJ TAB  &trans  &trans     &kp C_MUTE  &trans        &trans     &lt ADJ DEL
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
                raise_layer {
// ------------------------------------------------------------------------------
//| LGUI/F12 | F1 | F2 | F3 | F4 | F5 |    | F6 | F7 | F8 | F9 | F10 | RGUI/F11 |
//| CTRL/+   | !  | @  | #  | $  | %  |    | ^  | &  | *  | (  |  )  | CTRL/_   | 
//| LALT/=   | 1  | 2  | 3  | 4  | 5  |    | 6  | 7  | 8  | 9  |  0  | RALT/-   |
//                     | __ | __ | ADJ|    | ADJ| __ | __ |
                            bindings = <
&mt LWIN  F12   &kp F1   &kp F2 &kp F3   &kp F4   &kp F5                   &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &mt RWIN  F11
&mt LCTRL PLUS  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &mt RCTRL UNDER 
&mt LALT  EQUAL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5                   &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &mt RALT  MINUS
                                &trans   &trans   &lt ADJ RET  &kp C_MUTE  &lt ADJ ESC &trans &trans
                        >; 
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
                adjust_layer {
// ------------------------------------------------------------------------------------
//| BTLDR  |      |     |     |     |      |   |      |     |     |     |     | BTLDR |
//| BTCLR  | BT0  | BT1 | BT2 | BT3 | BT4  |   | BT4  | BT3 | BT2 | BT1 | BT0 | BTCLR |
//| pwrOFF | NMLK |     |     |     | CHBT |   | CHBT |     |     |     |     |       |
//                      |     |     |      |   |      |     |     |
                        bindings = <
&bootloader       &none        &none        &none        &none        &none                    &none        &none        &none        &none        &none        &bootloader
&bt BT_CLR        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR
&ext_power EP_OFF &kp KP_NUM   &none        &none        &none        &check_bat               &check_bat   &none        &none        &none        &none        &ext_power EP_OFF 
                                            &trans       &none        &trans       &kp C_MUTE  &trans       &none        &trans
                        >;
                        sensor-bindings = <&inc_dec_kp &numdot &grtsgn>;
                };
        };
};
